import java.util.Scanner;

public class DoublyLinkedListStack {
    private Node top; 
    private int size; 

    private class Node {
        int data;
        Node prev;
        Node next;

        Node(int data) {
            this.data = data;
        }
    }

    public DoublyLinkedListStack() {
        this.top = null;
        this.size = 0;
    }

    public void push(int data) {
        Node newNode = new Node(data);
        if (top != null) {
            newNode.next = top;
            top.prev = newNode;
        }
        top = newNode;
        size++;
    }
public int pop() {
        if (isEmpty()) {
            throw new IllegalStateException("Stack is Empty");
        }
        int data = top.data;
        top = top.next;
        if (top != null) {
            top.prev = null;
        }
        size--;
        return data;
    }

    public int peek() {
        if (isEmpty()) {
            throw new IllegalStateException("Stack is Empty");
        }
        return top.data;
    }

    public boolean isEmpty() {
        return top == null;
    }

    public int size() {
        return size;
    }

    public void printReverse() {
        Node current = top;
        System.out.println("Stack elements in reverse order:");
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
    }
public void clear() {
        top = null;
        size = 0;
        System.out.println("Stack cleared.");
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the stack size: ");
        int size = sc.nextInt();

        DoublyLinkedListStack stack = new DoublyLinkedListStack();

        for (int i = 0; i < size; i++) {
            System.out.printf("Enter element %d to push: ", i + 1);
            int num = sc.nextInt();
            stack.push(num);
        }

        System.out.println("---------------------------------");
        System.out.println("Top element is: " + stack.peek());
        System.out.println("Stack size is: " + stack.size());
        System.out.println("---------------------------------");
        System.out.println("Popped element is: " + stack.pop());
        System.out.println("---------------------------------");
        System.out.println("Top element is: " + stack.peek());
        System.out.println("Stack size is: " + stack.size());

        stack.printReverse();
        stack.clear();

        System.out.println("---------------------------------");
        sc.close();
    }
}
