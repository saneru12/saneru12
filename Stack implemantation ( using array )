import java.util.Scanner;

public class StringStackArray {
    // Array to store stack elements
    private String stack[];
    // Index of the top element in the stack
    private int top;
    // Maximum capacity of the stack
    private int capacity;

    // Constructor
    public StringStackArray(int capacity) {
        this.capacity = capacity;
        stack = new String[capacity];
        top = -1; // Stack is initially empty
    }

    // Push an element onto the stack
    public void push(String item) {
        if (top == capacity - 1) { // Check for stack overflow
            throw new IllegalStateException("Stack is Full");
        }
        stack[++top] = item; // Increment top and add item to the stack
    }

    // Pop an element from the stack
    public String pop() {
        if (isEmpty()) { // Check for stack is Empty
            throw new IllegalStateException("Stack is Empty");
        }
        return stack[top--]; // Return the top element and decrement top
    }
// Peek at the top element of the stack without removing it
    public String peek() {
        if (isEmpty()) { // Check if stack is empty
            throw new IllegalStateException("Stack is Empty");
        }
        return stack[top]; // Return the top element
    }

    // Check if the stack is empty
    public boolean isEmpty() {
        return top == -1;
    }

    // Get the size of the stack
    public int size() {
        return top + 1;
    }
    
    // Display all elements in the stack
    public void displayStack() {
        System.out.println("Elements in the stack:");
        for (int i = top; i >= 0; i--) {
            System.out.println(stack[i]);
        }
    }
public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Get stack size
        System.out.print("Enter your stack Size = ");
        int size = sc.nextInt();

        // Create stack with user-defined size
        StringStackArray stack = new StringStackArray(size);

        // Push operation
        for (int i = 0; i < size; i++) {
            System.out.printf("Enter your String %d to push = ", i + 1);
            String str = sc.next();
            stack.push(str);
        }

        // Using stack operations
        System.out.println("---------------------------------");
        System.out.println("Top element is: " + stack.peek());
        System.out.println("Stack size is: " + stack.size());
        System.out.println("---------------------------------");
        System.out.println("Popped element is: " + stack.pop());
        System.out.println("---------------------------------");
        System.out.println("Top element is: " + stack.peek());
        System.out.println("Stack size is: " + stack.size());
        System.out.println("---------------------------------");
        stack.displayStack();

        sc.close();
    }
}
